"""
Image generation tools for HiveSpace Agent.
- Provide invoice image markdown and general image markdown
- Expose a single tool `generate_image` that routes based on image_type
"""

from typing import Optional
from pydantic import BaseModel, Field
from langchain_core.tools import tool
import urllib.parse


def build_invoice_image_markdown(prompt: str, width: int = 400, height: int = 600) -> str:
    """Return markdown rendering a simple invoice image generated by pollinations.ai.

    The prompt is cleaned to focus on plain invoice content with white background.
    """
    clean_prompt = (
        "simple invoice receipt, plain white background, black text, "
        "order details, customer information, product list, total amount, "
        "clean business document, no decorations, no colors, minimal design"
    )
    final_prompt = f"{prompt}, {clean_prompt}"
    encoded = urllib.parse.quote_plus(final_prompt)
    seed = "hivespace-clean-invoice"
    url = f"https://image.pollinations.ai/prompt/{encoded}?seed={seed}&width={width}&height={height}"
    md = f"![Hóa đơn đơn hàng]({url})"
    caption = f"\n\n> Hóa đơn đơn hàng theo yêu cầu: \"{prompt}\" (kích thước: {width}x{height})"
    return md + caption


def build_general_image_markdown(prompt: str, width: int = 512, height: int = 512) -> str:
    """Return markdown rendering a general image via pollinations.ai."""
    style_suffix = " | high quality, detailed, clear"
    final_prompt = f"{prompt}{style_suffix}"
    encoded = urllib.parse.quote_plus(final_prompt)
    seed = "hivespace-general"
    url = f"https://image.pollinations.ai/prompt/{encoded}?seed={seed}&width={width}&height={height}"
    md = f"![{prompt}]({url})"
    caption = f"\n\n> Hình ảnh theo yêu cầu: \"{prompt}\" (kích thước: {width}x{height})"
    return md + caption


class GenerateImageInput(BaseModel):
    prompt: str = Field(description="Mô tả hình ảnh cần tạo")
    image_type: str = Field(description="'invoice' cho hóa đơn, 'general' cho hình ảnh tổng quát")
    width: Optional[int] = Field(default=None, description="Chiều rộng ảnh")
    height: Optional[int] = Field(default=None, description="Chiều cao ảnh")


@tool("generate_image", args_schema=GenerateImageInput, return_direct=True)
def generate_image(prompt: str, image_type: str, width: Optional[int] = None, height: Optional[int] = None) -> str:
    """Generate image markdown (invoice or general).

    - invoice: plain invoice style image focused on textual details
    - general: high quality generic image rendering
    """
    kind = (image_type or "general").lower().strip()
    if kind == "invoice":
        w = width if width else 400
        h = height if height else 600
        return build_invoice_image_markdown(prompt, w, h)
    else:
        w = width if width else 512
        h = height if height else 512
        return build_general_image_markdown(prompt, w, h)


